# MacOS 10.14 Mojave and below: send copy-mode text to system clipboard.
# Requires this utility: brew install reattach-to-user-namespace
# If you don't install the utility, Tmux will crash on launch.
#
#set-option -g default-command "reattach-to-user-namespace -l zsh"

# Connect to ssh-agent socket by copying environment variables
# from parent shell. Avoids typing SSH passwords again in new shells.
# http://spin.atomicobject.com/2012/01/28/less-perplexing-terminal-multiplexing-with-tmux/
set -g update-environment -r

# Remove Esc-Wait so Vim works faster
# Also determines Tmux wait period for key combinations after Esc is pressed
set -sg escape-time 0

# 256 color, true color, and italics modes
# https://medium.com/@dubistkomisch/how-to-actually-get-italics-and-true-colour-to-work-in-iterm-tmux-vim-9ebe55ebc2be
set -g default-terminal 'tmux-256color'            # Use screen colors inside Tmux
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m' # Enable true colors, italics

# Automatically renumber windows when one is closed
# Tmux windows are "tabs" listed at bottom bar
#
# I actually want the ability to manually set windows numbers to be at 0-9-8-7…
# I don't want renumbering since my prefix key (ctrl-x) is on my left hand,
# reaching for the 0-9-8 keys on my right hand isn't hard for me and
# alternating hands is good for typing speed.
# set -g renumber-windows on

# Increase scrollback buffer size from 2000
set -g history-limit 5000

# Use readline/emacs keys like ctrl-a, ctrl-e on Tmux command line
# https://git.sr.ht/~gpanders/dotfiles/tree/master/item/.config/tmux/tmux.conf
set -g status-keys emacs

# Enable tap to reposition cursor, scrolling inside panes
set -g mouse on

# Set focus-events on (important for Neovim autoread)
set -g focus-events on

# Set prefix to uncommonly-used Ctrl-x
unbind C-b
set -g prefix C-x

# Use "C-x x" to send "Ctrl-x" to inner terminal.
# Pressing "C-x C-x" seems to be unbinded by this command.
# Ctrl-x is used as commands in Bash, Nano, and rTorrent.
bind-key x send-prefix

# Use prefix-b for previous window,
# doesn't conflict with prefix-p for paste.
# Mnemonic is "back"
bind b previous-window

# Select panes with lowercase keys:
#   1) prefix and hjkl
#   2) Alt hjkl directly
# In Blink iOS app, must set Alt as mapped to Esc.
bind h select-pane -L
bind -n M-h select-pane -L
bind j select-pane -D
bind -n M-j select-pane -D
bind k select-pane -U
bind -n M-k select-pane -U
bind l select-pane -R
bind -n M-l select-pane -R

# Resize panes with uppercase keys:
#   1) prefix HJKL
#   2) Alt HJKL directly
bind -r H resize-pane -L 1
bind -n M-H resize-pane -L 1
bind -r J resize-pane -D 1
bind -n M-J resize-pane -D 1
bind -r K resize-pane -U 1
bind -n M-K resize-pane -U 1
bind -r L resize-pane -R 1
bind -n M-L resize-pane -R 1

# Use prefix-! to hide pane
# Use prefix-@ to bring back hidden pane at current pane
# https://unix.stackexchange.com/a/506103
bind-key ! break-pane -d -n _hide
bind-key @ join-pane -s $.0

# Zoom with Alt-m
bind -n M-m resize-pane -Z

# Send 'repeat last shell command' to last active pane
# Mnemonic is 'Go do last command' using alt-g
bind -n M-g send-keys -R -t ! "C-p" Enter

# Switch between windows with Alt-0 (zero)
# Mnemonic is 'Other window', (0 looks like o,
# but alt-o and alt-O makes new 'øØ' glyphs in macOS)
# https://stackoverflow.com/a/12380693
bind -n M-0 'last-window'

# Use vi mode for navigation in scrollback view (copy mode)
set-window-option -g mode-keys vi
unbind p   ;   bind p paste-buffer    # ignore default 'prefix-p, switch to prev buffer'
unbind-key -T copy-mode-vi Space  ;   bind-key -T copy-mode-vi v send-keys -X begin-selection

# The following 2 lines are for Tmux 2.8+ and macOS 10.14 Mojave and below
#bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace -l $SHELL"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace -l $SHELL"

# The following 2 lines are for Tmux 2.8+ and macOS 11 Big Sur
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Use prefix-r to reload tmux config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Open current visual selection with system default app (prefix-O)
bind -T copy-mode-vi O send-keys -X copy-pipe-and-cancel { xargs -I {} tmux run-shell -b 'cd "#{pane_current_path}"; open "{}" >/dev/null' }

# Customize copy mode highlight color -----------------------------------------
# This controls the visual highlight color of copy mode
set-window-option -g mode-style 'bg=colour229,fg=colour236'

# Customize status bar colors -------------------------------------------------
# macOS Tmux 2.9+
# https://github.com/tmux/tmux/issues/1689#issuecomment-486722349
set -g status-style bg=colour236
set -g window-status-style bg=colour236,fg='#999999',dim
set -g window-status-current-style bg=colour236,fg=white,bright

# Customize left status area --------------------------------------------------
#
# NOTE: Set terminal app to use patched fonts (like Hack Nerd Font)
# that has the Powerline-like left and right triangle glyphs: 
# https://github.com/ryanoasis/nerd-fonts
#
set-option -g status-left "\
#[fg=colour7, bg=colour241]#{?client_prefix,#[bg=colour167],} #S \
#[fg=colour241, bg=colour236]#{?client_prefix,#[fg=colour167],} "

# Customize right status area
set-option -g status-right "\
%a %d-%b \
#[fg=colour0, bg=colour236]\
#[fg=colour255, bg=colour0] %H:%M "

# Customize border colors -----------------------------------------------------
set -g pane-border-style fg='colour250',bg='colour235'
set -g pane-active-border-style fg='colour211',bg='colour235'

# Customize window colors -----------------------------------------------------
set -g window-style fg='colour250',bg='colour235'
set -g window-active-style fg='colour252',bg='colour233'

# List of Tmux plugins --------------------------------------------------------
# Clone new plugins into ~/.tmux/plugins/, then
# "prefix I" to install the plugin (capital I)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-copycat'

# Enable restore of Vim/Neovim sessions
# (requires vim-obsession plugin and Session.vim file)
# Doesn't auto-restore with Neovim currently.
# Instead, launch saved session with 'nvim -S'.
# Use ':Obsession' in Nvim to start recording session to a file.
#
# Save Tmux session:      prefix, ctrl-s
# Restore Tmux session:   prefix, ctrl-r
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# Copycat plugin
# Iterates through regex searches, git files, urls
#
# While Tmux 3.1 has native regex searching, it's not as
# ergonomic as Copycpat (doesn't yank selection, has poor filtering
# of files). Copycpat is more convenient but has janky redraw issues.
#
# I should see if found searches are automatically yanked in Tmux 3.2
# and filenames are smartly distinguished, and if both are true,
# I can ditch Copycat plugin.
#
# prefix, ctrl-f - find files
# prefix, ctrl-g - iterate through git status files (use after git status)
# prefix, ctrl-h - iterate through git SHA hashes (use after git log)
# prefix, ctrl-u - find URLs (http, ftp, git)
# prefix, ctrl-d - find numbers (mnemonic is 'd' for digit)
# n              - jump backwards in scrollback buffer to next match
# N              - jump forward in scrollback buffer to previous match
# Enter          - copy highlighted match

# Initialize Tmux plugin manager (keep at end of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
